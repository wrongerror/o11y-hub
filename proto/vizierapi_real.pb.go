// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/vizierapi_real.proto

package vizierpb

import (
	any1 "github.com/golang/protobuf/ptypes/any"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status codes enum
type Code int32

const (
	Code_OK                  Code = 0
	Code_INTERNAL            Code = 1
	Code_INVALID_ARGUMENT    Code = 2
	Code_NOT_FOUND           Code = 3
	Code_PERMISSION_DENIED   Code = 4
	Code_UNIMPLEMENTED       Code = 5
	Code_FAILED_PRECONDITION Code = 6
	Code_RESOURCE_EXHAUSTED  Code = 7
	Code_CANCELLED           Code = 8
	Code_UNKNOWN             Code = 9
)

// Enum value maps for Code.
var (
	Code_name = map[int32]string{
		0: "OK",
		1: "INTERNAL",
		2: "INVALID_ARGUMENT",
		3: "NOT_FOUND",
		4: "PERMISSION_DENIED",
		5: "UNIMPLEMENTED",
		6: "FAILED_PRECONDITION",
		7: "RESOURCE_EXHAUSTED",
		8: "CANCELLED",
		9: "UNKNOWN",
	}
	Code_value = map[string]int32{
		"OK":                  0,
		"INTERNAL":            1,
		"INVALID_ARGUMENT":    2,
		"NOT_FOUND":           3,
		"PERMISSION_DENIED":   4,
		"UNIMPLEMENTED":       5,
		"FAILED_PRECONDITION": 6,
		"RESOURCE_EXHAUSTED":  7,
		"CANCELLED":           8,
		"UNKNOWN":             9,
	}
)

func (x Code) Enum() *Code {
	p := new(Code)
	*p = x
	return p
}

func (x Code) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Code) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vizierapi_real_proto_enumTypes[0].Descriptor()
}

func (Code) Type() protoreflect.EnumType {
	return &file_proto_vizierapi_real_proto_enumTypes[0]
}

func (x Code) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Code.Descriptor instead.
func (Code) EnumDescriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{0}
}

// Data types enum
type DataType int32

const (
	DataType_DATA_TYPE_UNKNOWN DataType = 0
	DataType_BOOLEAN           DataType = 1
	DataType_INT64             DataType = 2
	DataType_UINT128           DataType = 3
	DataType_FLOAT64           DataType = 4
	DataType_STRING            DataType = 5
	DataType_TIME64NS          DataType = 6
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "DATA_TYPE_UNKNOWN",
		1: "BOOLEAN",
		2: "INT64",
		3: "UINT128",
		4: "FLOAT64",
		5: "STRING",
		6: "TIME64NS",
	}
	DataType_value = map[string]int32{
		"DATA_TYPE_UNKNOWN": 0,
		"BOOLEAN":           1,
		"INT64":             2,
		"UINT128":           3,
		"FLOAT64":           4,
		"STRING":            5,
		"TIME64NS":          6,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vizierapi_real_proto_enumTypes[1].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_proto_vizierapi_real_proto_enumTypes[1]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{1}
}

// Semantic types enum
type SemanticType int32

const (
	SemanticType_ST_NONE                    SemanticType = 0
	SemanticType_ST_TIME_NS                 SemanticType = 1
	SemanticType_ST_SERVICE_NAME            SemanticType = 2
	SemanticType_ST_POD                     SemanticType = 3
	SemanticType_ST_CONTAINER               SemanticType = 4
	SemanticType_ST_NAMESPACE               SemanticType = 5
	SemanticType_ST_NODE                    SemanticType = 6
	SemanticType_ST_UPID                    SemanticType = 7
	SemanticType_ST_IP_ADDRESS              SemanticType = 8
	SemanticType_ST_PORT                    SemanticType = 9
	SemanticType_ST_HTTP_RESP_STATUS        SemanticType = 10
	SemanticType_ST_HTTP_RESP_MESSAGE       SemanticType = 11
	SemanticType_ST_DURATION_NS             SemanticType = 12
	SemanticType_ST_THROUGHPUT_PER_NS       SemanticType = 13
	SemanticType_ST_THROUGHPUT_BYTES_PER_NS SemanticType = 14
	SemanticType_ST_QUANTILES               SemanticType = 15
	SemanticType_ST_PERCENT                 SemanticType = 16
	SemanticType_ST_BYTES                   SemanticType = 17
)

// Enum value maps for SemanticType.
var (
	SemanticType_name = map[int32]string{
		0:  "ST_NONE",
		1:  "ST_TIME_NS",
		2:  "ST_SERVICE_NAME",
		3:  "ST_POD",
		4:  "ST_CONTAINER",
		5:  "ST_NAMESPACE",
		6:  "ST_NODE",
		7:  "ST_UPID",
		8:  "ST_IP_ADDRESS",
		9:  "ST_PORT",
		10: "ST_HTTP_RESP_STATUS",
		11: "ST_HTTP_RESP_MESSAGE",
		12: "ST_DURATION_NS",
		13: "ST_THROUGHPUT_PER_NS",
		14: "ST_THROUGHPUT_BYTES_PER_NS",
		15: "ST_QUANTILES",
		16: "ST_PERCENT",
		17: "ST_BYTES",
	}
	SemanticType_value = map[string]int32{
		"ST_NONE":                    0,
		"ST_TIME_NS":                 1,
		"ST_SERVICE_NAME":            2,
		"ST_POD":                     3,
		"ST_CONTAINER":               4,
		"ST_NAMESPACE":               5,
		"ST_NODE":                    6,
		"ST_UPID":                    7,
		"ST_IP_ADDRESS":              8,
		"ST_PORT":                    9,
		"ST_HTTP_RESP_STATUS":        10,
		"ST_HTTP_RESP_MESSAGE":       11,
		"ST_DURATION_NS":             12,
		"ST_THROUGHPUT_PER_NS":       13,
		"ST_THROUGHPUT_BYTES_PER_NS": 14,
		"ST_QUANTILES":               15,
		"ST_PERCENT":                 16,
		"ST_BYTES":                   17,
	}
)

func (x SemanticType) Enum() *SemanticType {
	p := new(SemanticType)
	*p = x
	return p
}

func (x SemanticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SemanticType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vizierapi_real_proto_enumTypes[2].Descriptor()
}

func (SemanticType) Type() protoreflect.EnumType {
	return &file_proto_vizierapi_real_proto_enumTypes[2]
}

func (x SemanticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SemanticType.Descriptor instead.
func (SemanticType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{2}
}

// Status message
type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrCode       Code                   `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=px.api.vizierpb.Code" json:"err_code,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Context       *any1.Any              `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetErrCode() Code {
	if x != nil {
		return x.ErrCode
	}
	return Code_OK
}

func (x *Status) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Status) GetContext() *any1.Any {
	if x != nil {
		return x.Context
	}
	return nil
}

// Request for the HealthCheck call.
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The UUID of the cluster encoded as a string with dashes.
	ClusterId     string `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{1}
}

func (x *HealthCheckRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

// Response for the HealthCheck call.
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The status of the cluster.
	Status        *Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{2}
}

func (x *HealthCheckResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

// Execute script request
type ExecuteScriptRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The PxL script to execute
	QueryStr string `protobuf:"bytes,1,opt,name=query_str,json=queryStr,proto3" json:"query_str,omitempty"`
	// The cluster ID
	ClusterId string `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	// Optional execution functions
	ExecFuncs []*QueryFunc `protobuf:"bytes,4,rep,name=exec_funcs,json=execFuncs,proto3" json:"exec_funcs,omitempty"`
	// Whether this is a mutation query
	Mutation bool `protobuf:"varint,5,opt,name=mutation,proto3" json:"mutation,omitempty"`
	// Query name for metrics (custom field)
	QueryName     string `protobuf:"bytes,6,opt,name=query_name,json=queryName,proto3" json:"query_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptRequest) Reset() {
	*x = ExecuteScriptRequest{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptRequest) ProtoMessage() {}

func (x *ExecuteScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptRequest.ProtoReflect.Descriptor instead.
func (*ExecuteScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{3}
}

func (x *ExecuteScriptRequest) GetQueryStr() string {
	if x != nil {
		return x.QueryStr
	}
	return ""
}

func (x *ExecuteScriptRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ExecuteScriptRequest) GetExecFuncs() []*QueryFunc {
	if x != nil {
		return x.ExecFuncs
	}
	return nil
}

func (x *ExecuteScriptRequest) GetMutation() bool {
	if x != nil {
		return x.Mutation
	}
	return false
}

func (x *ExecuteScriptRequest) GetQueryName() string {
	if x != nil {
		return x.QueryName
	}
	return ""
}

// Query function definition
type QueryFunc struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Function name
	FuncName string `protobuf:"bytes,1,opt,name=func_name,json=funcName,proto3" json:"func_name,omitempty"`
	// Arguments for the function
	ArgValues []*QueryArg `protobuf:"bytes,2,rep,name=arg_values,json=argValues,proto3" json:"arg_values,omitempty"`
	// Output table prefix
	OutputTablePrefix string `protobuf:"bytes,3,opt,name=output_table_prefix,json=outputTablePrefix,proto3" json:"output_table_prefix,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryFunc) Reset() {
	*x = QueryFunc{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryFunc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFunc) ProtoMessage() {}

func (x *QueryFunc) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFunc.ProtoReflect.Descriptor instead.
func (*QueryFunc) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{4}
}

func (x *QueryFunc) GetFuncName() string {
	if x != nil {
		return x.FuncName
	}
	return ""
}

func (x *QueryFunc) GetArgValues() []*QueryArg {
	if x != nil {
		return x.ArgValues
	}
	return nil
}

func (x *QueryFunc) GetOutputTablePrefix() string {
	if x != nil {
		return x.OutputTablePrefix
	}
	return ""
}

// Query argument
type QueryArg struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Argument name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Argument value
	Value         string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryArg) Reset() {
	*x = QueryArg{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryArg) ProtoMessage() {}

func (x *QueryArg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryArg.ProtoReflect.Descriptor instead.
func (*QueryArg) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{5}
}

func (x *QueryArg) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryArg) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// Execute script response
type ExecuteScriptResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Query ID
	QueryId string `protobuf:"bytes,1,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Status of the query
	Status *Status `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ExecuteScriptResponse_MetaData
	//	*ExecuteScriptResponse_Data
	Result        isExecuteScriptResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptResponse) Reset() {
	*x = ExecuteScriptResponse{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptResponse) ProtoMessage() {}

func (x *ExecuteScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptResponse.ProtoReflect.Descriptor instead.
func (*ExecuteScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteScriptResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *ExecuteScriptResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExecuteScriptResponse) GetResult() isExecuteScriptResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ExecuteScriptResponse) GetMetaData() *QueryMetadata {
	if x != nil {
		if x, ok := x.Result.(*ExecuteScriptResponse_MetaData); ok {
			return x.MetaData
		}
	}
	return nil
}

func (x *ExecuteScriptResponse) GetData() *QueryData {
	if x != nil {
		if x, ok := x.Result.(*ExecuteScriptResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

type isExecuteScriptResponse_Result interface {
	isExecuteScriptResponse_Result()
}

type ExecuteScriptResponse_MetaData struct {
	// Query metadata (table schemas)
	MetaData *QueryMetadata `protobuf:"bytes,3,opt,name=meta_data,json=metaData,proto3,oneof"`
}

type ExecuteScriptResponse_Data struct {
	// Query data
	Data *QueryData `protobuf:"bytes,4,opt,name=data,proto3,oneof"`
}

func (*ExecuteScriptResponse_MetaData) isExecuteScriptResponse_Result() {}

func (*ExecuteScriptResponse_Data) isExecuteScriptResponse_Result() {}

// Query metadata (table schema information)
type QueryMetadata struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Table ID
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// Table relation/schema
	Relation      *Relation `protobuf:"bytes,3,opt,name=relation,proto3" json:"relation,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMetadata) Reset() {
	*x = QueryMetadata{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetadata) ProtoMessage() {}

func (x *QueryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMetadata.ProtoReflect.Descriptor instead.
func (*QueryMetadata) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{7}
}

func (x *QueryMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryMetadata) GetRelation() *Relation {
	if x != nil {
		return x.Relation
	}
	return nil
}

// Table relation/schema definition
type Relation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Columns       []*Column              `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Relation) Reset() {
	*x = Relation{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Relation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Relation) ProtoMessage() {}

func (x *Relation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Relation.ProtoReflect.Descriptor instead.
func (*Relation) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{8}
}

func (x *Relation) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

// Column definition
type Column struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ColumnName         string                 `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ColumnType         DataType               `protobuf:"varint,2,opt,name=column_type,json=columnType,proto3,enum=px.api.vizierpb.DataType" json:"column_type,omitempty"`
	ColumnSemanticType SemanticType           `protobuf:"varint,3,opt,name=column_semantic_type,json=columnSemanticType,proto3,enum=px.api.vizierpb.SemanticType" json:"column_semantic_type,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{9}
}

func (x *Column) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *Column) GetColumnType() DataType {
	if x != nil {
		return x.ColumnType
	}
	return DataType_DATA_TYPE_UNKNOWN
}

func (x *Column) GetColumnSemanticType() SemanticType {
	if x != nil {
		return x.ColumnSemanticType
	}
	return SemanticType_ST_NONE
}

// Query data
type QueryData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Row batch data
	Batch *RowBatchData `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	// Execution statistics
	ExecutionStats *QueryExecutionStats `protobuf:"bytes,2,opt,name=execution_stats,json=executionStats,proto3" json:"execution_stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryData) Reset() {
	*x = QueryData{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryData) ProtoMessage() {}

func (x *QueryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryData.ProtoReflect.Descriptor instead.
func (*QueryData) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{10}
}

func (x *QueryData) GetBatch() *RowBatchData {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *QueryData) GetExecutionStats() *QueryExecutionStats {
	if x != nil {
		return x.ExecutionStats
	}
	return nil
}

// Row batch data
type RowBatchData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Table ID
	TableId string `protobuf:"bytes,1,opt,name=table_id,json=tableId,proto3" json:"table_id,omitempty"`
	// Column data
	Cols []*ColumnData `protobuf:"bytes,2,rep,name=cols,proto3" json:"cols,omitempty"`
	// Number of rows
	NumRows int64 `protobuf:"varint,3,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	// End of window
	Eow bool `protobuf:"varint,4,opt,name=eow,proto3" json:"eow,omitempty"`
	// End of stream
	Eos           bool `protobuf:"varint,5,opt,name=eos,proto3" json:"eos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowBatchData) Reset() {
	*x = RowBatchData{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowBatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowBatchData) ProtoMessage() {}

func (x *RowBatchData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowBatchData.ProtoReflect.Descriptor instead.
func (*RowBatchData) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{11}
}

func (x *RowBatchData) GetTableId() string {
	if x != nil {
		return x.TableId
	}
	return ""
}

func (x *RowBatchData) GetCols() []*ColumnData {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *RowBatchData) GetNumRows() int64 {
	if x != nil {
		return x.NumRows
	}
	return 0
}

func (x *RowBatchData) GetEow() bool {
	if x != nil {
		return x.Eow
	}
	return false
}

func (x *RowBatchData) GetEos() bool {
	if x != nil {
		return x.Eos
	}
	return false
}

// Column data (union type for different data types)
type ColumnData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ColData:
	//
	//	*ColumnData_BooleanData
	//	*ColumnData_Int64Data
	//	*ColumnData_Uint128Data
	//	*ColumnData_Float64Data
	//	*ColumnData_StringData
	//	*ColumnData_Time64NsData
	ColData       isColumnData_ColData `protobuf_oneof:"col_data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColumnData) Reset() {
	*x = ColumnData{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColumnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColumnData) ProtoMessage() {}

func (x *ColumnData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColumnData.ProtoReflect.Descriptor instead.
func (*ColumnData) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{12}
}

func (x *ColumnData) GetColData() isColumnData_ColData {
	if x != nil {
		return x.ColData
	}
	return nil
}

func (x *ColumnData) GetBooleanData() *BooleanColumn {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_BooleanData); ok {
			return x.BooleanData
		}
	}
	return nil
}

func (x *ColumnData) GetInt64Data() *Int64Column {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_Int64Data); ok {
			return x.Int64Data
		}
	}
	return nil
}

func (x *ColumnData) GetUint128Data() *UInt128Column {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_Uint128Data); ok {
			return x.Uint128Data
		}
	}
	return nil
}

func (x *ColumnData) GetFloat64Data() *Float64Column {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_Float64Data); ok {
			return x.Float64Data
		}
	}
	return nil
}

func (x *ColumnData) GetStringData() *StringColumn {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_StringData); ok {
			return x.StringData
		}
	}
	return nil
}

func (x *ColumnData) GetTime64NsData() *Time64NSColumn {
	if x != nil {
		if x, ok := x.ColData.(*ColumnData_Time64NsData); ok {
			return x.Time64NsData
		}
	}
	return nil
}

type isColumnData_ColData interface {
	isColumnData_ColData()
}

type ColumnData_BooleanData struct {
	BooleanData *BooleanColumn `protobuf:"bytes,1,opt,name=boolean_data,json=booleanData,proto3,oneof"`
}

type ColumnData_Int64Data struct {
	Int64Data *Int64Column `protobuf:"bytes,2,opt,name=int64_data,json=int64Data,proto3,oneof"`
}

type ColumnData_Uint128Data struct {
	Uint128Data *UInt128Column `protobuf:"bytes,3,opt,name=uint128_data,json=uint128Data,proto3,oneof"`
}

type ColumnData_Float64Data struct {
	Float64Data *Float64Column `protobuf:"bytes,4,opt,name=float64_data,json=float64Data,proto3,oneof"`
}

type ColumnData_StringData struct {
	StringData *StringColumn `protobuf:"bytes,5,opt,name=string_data,json=stringData,proto3,oneof"`
}

type ColumnData_Time64NsData struct {
	Time64NsData *Time64NSColumn `protobuf:"bytes,6,opt,name=time64ns_data,json=time64nsData,proto3,oneof"`
}

func (*ColumnData_BooleanData) isColumnData_ColData() {}

func (*ColumnData_Int64Data) isColumnData_ColData() {}

func (*ColumnData_Uint128Data) isColumnData_ColData() {}

func (*ColumnData_Float64Data) isColumnData_ColData() {}

func (*ColumnData_StringData) isColumnData_ColData() {}

func (*ColumnData_Time64NsData) isColumnData_ColData() {}

// Boolean column data
type BooleanColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []bool                 `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BooleanColumn) Reset() {
	*x = BooleanColumn{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BooleanColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BooleanColumn) ProtoMessage() {}

func (x *BooleanColumn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BooleanColumn.ProtoReflect.Descriptor instead.
func (*BooleanColumn) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{13}
}

func (x *BooleanColumn) GetData() []bool {
	if x != nil {
		return x.Data
	}
	return nil
}

// Int64 column data
type Int64Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []int64                `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Int64Column) Reset() {
	*x = Int64Column{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Int64Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64Column) ProtoMessage() {}

func (x *Int64Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64Column.ProtoReflect.Descriptor instead.
func (*Int64Column) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{14}
}

func (x *Int64Column) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// UInt128 column data (represented as bytes)
type UInt128Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          [][]byte               `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UInt128Column) Reset() {
	*x = UInt128Column{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UInt128Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UInt128Column) ProtoMessage() {}

func (x *UInt128Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UInt128Column.ProtoReflect.Descriptor instead.
func (*UInt128Column) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{15}
}

func (x *UInt128Column) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Float64 column data
type Float64Column struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []float64              `protobuf:"fixed64,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Float64Column) Reset() {
	*x = Float64Column{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Float64Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Float64Column) ProtoMessage() {}

func (x *Float64Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Float64Column.ProtoReflect.Descriptor instead.
func (*Float64Column) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{16}
}

func (x *Float64Column) GetData() []float64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// String column data
type StringColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          [][]byte               `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StringColumn) Reset() {
	*x = StringColumn{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StringColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StringColumn) ProtoMessage() {}

func (x *StringColumn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StringColumn.ProtoReflect.Descriptor instead.
func (*StringColumn) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{17}
}

func (x *StringColumn) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// Time64NS column data
type Time64NSColumn struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []int64                `protobuf:"varint,1,rep,packed,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Time64NSColumn) Reset() {
	*x = Time64NSColumn{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Time64NSColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Time64NSColumn) ProtoMessage() {}

func (x *Time64NSColumn) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Time64NSColumn.ProtoReflect.Descriptor instead.
func (*Time64NSColumn) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{18}
}

func (x *Time64NSColumn) GetData() []int64 {
	if x != nil {
		return x.Data
	}
	return nil
}

// Query execution statistics
type QueryExecutionStats struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Timing information
	Timing *QueryTimingInfo `protobuf:"bytes,1,opt,name=timing,proto3" json:"timing,omitempty"`
	// Bytes processed
	BytesProcessed int64 `protobuf:"varint,2,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
	// Records processed
	RecordsProcessed int64 `protobuf:"varint,3,opt,name=records_processed,json=recordsProcessed,proto3" json:"records_processed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryExecutionStats) Reset() {
	*x = QueryExecutionStats{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExecutionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExecutionStats) ProtoMessage() {}

func (x *QueryExecutionStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExecutionStats.ProtoReflect.Descriptor instead.
func (*QueryExecutionStats) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{19}
}

func (x *QueryExecutionStats) GetTiming() *QueryTimingInfo {
	if x != nil {
		return x.Timing
	}
	return nil
}

func (x *QueryExecutionStats) GetBytesProcessed() int64 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

func (x *QueryExecutionStats) GetRecordsProcessed() int64 {
	if x != nil {
		return x.RecordsProcessed
	}
	return 0
}

// Query timing information
type QueryTimingInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Execution time in nanoseconds
	ExecutionTimeNs int64 `protobuf:"varint,1,opt,name=execution_time_ns,json=executionTimeNs,proto3" json:"execution_time_ns,omitempty"`
	// Compilation time in nanoseconds
	CompilationTimeNs int64 `protobuf:"varint,2,opt,name=compilation_time_ns,json=compilationTimeNs,proto3" json:"compilation_time_ns,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QueryTimingInfo) Reset() {
	*x = QueryTimingInfo{}
	mi := &file_proto_vizierapi_real_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryTimingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTimingInfo) ProtoMessage() {}

func (x *QueryTimingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_real_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTimingInfo.ProtoReflect.Descriptor instead.
func (*QueryTimingInfo) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_real_proto_rawDescGZIP(), []int{20}
}

func (x *QueryTimingInfo) GetExecutionTimeNs() int64 {
	if x != nil {
		return x.ExecutionTimeNs
	}
	return 0
}

func (x *QueryTimingInfo) GetCompilationTimeNs() int64 {
	if x != nil {
		return x.CompilationTimeNs
	}
	return 0
}

var File_proto_vizierapi_real_proto protoreflect.FileDescriptor

const file_proto_vizierapi_real_proto_rawDesc = "" +
	"\n" +
	"\x1aproto/vizierapi_real.proto\x12\x0fpx.api.vizierpb\x1a\x19google/protobuf/any.proto\"|\n" +
	"\x06Status\x120\n" +
	"\berr_code\x18\x01 \x01(\x0e2\x15.px.api.vizierpb.CodeR\aerrCode\x12\x10\n" +
	"\x03msg\x18\x02 \x01(\tR\x03msg\x12.\n" +
	"\acontext\x18\x03 \x01(\v2\x14.google.protobuf.AnyR\acontext\"3\n" +
	"\x12HealthCheckRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"F\n" +
	"\x13HealthCheckResponse\x12/\n" +
	"\x06status\x18\x01 \x01(\v2\x17.px.api.vizierpb.StatusR\x06status\"\xc8\x01\n" +
	"\x14ExecuteScriptRequest\x12\x1b\n" +
	"\tquery_str\x18\x01 \x01(\tR\bqueryStr\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\x129\n" +
	"\n" +
	"exec_funcs\x18\x04 \x03(\v2\x1a.px.api.vizierpb.QueryFuncR\texecFuncs\x12\x1a\n" +
	"\bmutation\x18\x05 \x01(\bR\bmutation\x12\x1d\n" +
	"\n" +
	"query_name\x18\x06 \x01(\tR\tqueryName\"\x92\x01\n" +
	"\tQueryFunc\x12\x1b\n" +
	"\tfunc_name\x18\x01 \x01(\tR\bfuncName\x128\n" +
	"\n" +
	"arg_values\x18\x02 \x03(\v2\x19.px.api.vizierpb.QueryArgR\targValues\x12.\n" +
	"\x13output_table_prefix\x18\x03 \x01(\tR\x11outputTablePrefix\"4\n" +
	"\bQueryArg\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\xde\x01\n" +
	"\x15ExecuteScriptResponse\x12\x19\n" +
	"\bquery_id\x18\x01 \x01(\tR\aqueryId\x12/\n" +
	"\x06status\x18\x02 \x01(\v2\x17.px.api.vizierpb.StatusR\x06status\x12=\n" +
	"\tmeta_data\x18\x03 \x01(\v2\x1e.px.api.vizierpb.QueryMetadataH\x00R\bmetaData\x120\n" +
	"\x04data\x18\x04 \x01(\v2\x1a.px.api.vizierpb.QueryDataH\x00R\x04dataB\b\n" +
	"\x06result\"j\n" +
	"\rQueryMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x125\n" +
	"\brelation\x18\x03 \x01(\v2\x19.px.api.vizierpb.RelationR\brelation\"=\n" +
	"\bRelation\x121\n" +
	"\acolumns\x18\x01 \x03(\v2\x17.px.api.vizierpb.ColumnR\acolumns\"\xb6\x01\n" +
	"\x06Column\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x12:\n" +
	"\vcolumn_type\x18\x02 \x01(\x0e2\x19.px.api.vizierpb.DataTypeR\n" +
	"columnType\x12O\n" +
	"\x14column_semantic_type\x18\x03 \x01(\x0e2\x1d.px.api.vizierpb.SemanticTypeR\x12columnSemanticType\"\x8f\x01\n" +
	"\tQueryData\x123\n" +
	"\x05batch\x18\x01 \x01(\v2\x1d.px.api.vizierpb.RowBatchDataR\x05batch\x12M\n" +
	"\x0fexecution_stats\x18\x02 \x01(\v2$.px.api.vizierpb.QueryExecutionStatsR\x0eexecutionStats\"\x99\x01\n" +
	"\fRowBatchData\x12\x19\n" +
	"\btable_id\x18\x01 \x01(\tR\atableId\x12/\n" +
	"\x04cols\x18\x02 \x03(\v2\x1b.px.api.vizierpb.ColumnDataR\x04cols\x12\x19\n" +
	"\bnum_rows\x18\x03 \x01(\x03R\anumRows\x12\x10\n" +
	"\x03eow\x18\x04 \x01(\bR\x03eow\x12\x10\n" +
	"\x03eos\x18\x05 \x01(\bR\x03eos\"\xb0\x03\n" +
	"\n" +
	"ColumnData\x12C\n" +
	"\fboolean_data\x18\x01 \x01(\v2\x1e.px.api.vizierpb.BooleanColumnH\x00R\vbooleanData\x12=\n" +
	"\n" +
	"int64_data\x18\x02 \x01(\v2\x1c.px.api.vizierpb.Int64ColumnH\x00R\tint64Data\x12C\n" +
	"\fuint128_data\x18\x03 \x01(\v2\x1e.px.api.vizierpb.UInt128ColumnH\x00R\vuint128Data\x12C\n" +
	"\ffloat64_data\x18\x04 \x01(\v2\x1e.px.api.vizierpb.Float64ColumnH\x00R\vfloat64Data\x12@\n" +
	"\vstring_data\x18\x05 \x01(\v2\x1d.px.api.vizierpb.StringColumnH\x00R\n" +
	"stringData\x12F\n" +
	"\rtime64ns_data\x18\x06 \x01(\v2\x1f.px.api.vizierpb.Time64NSColumnH\x00R\ftime64nsDataB\n" +
	"\n" +
	"\bcol_data\"#\n" +
	"\rBooleanColumn\x12\x12\n" +
	"\x04data\x18\x01 \x03(\bR\x04data\"!\n" +
	"\vInt64Column\x12\x12\n" +
	"\x04data\x18\x01 \x03(\x03R\x04data\"#\n" +
	"\rUInt128Column\x12\x12\n" +
	"\x04data\x18\x01 \x03(\fR\x04data\"#\n" +
	"\rFloat64Column\x12\x12\n" +
	"\x04data\x18\x01 \x03(\x01R\x04data\"\"\n" +
	"\fStringColumn\x12\x12\n" +
	"\x04data\x18\x01 \x03(\fR\x04data\"$\n" +
	"\x0eTime64NSColumn\x12\x12\n" +
	"\x04data\x18\x01 \x03(\x03R\x04data\"\xa5\x01\n" +
	"\x13QueryExecutionStats\x128\n" +
	"\x06timing\x18\x01 \x01(\v2 .px.api.vizierpb.QueryTimingInfoR\x06timing\x12'\n" +
	"\x0fbytes_processed\x18\x02 \x01(\x03R\x0ebytesProcessed\x12+\n" +
	"\x11records_processed\x18\x03 \x01(\x03R\x10recordsProcessed\"m\n" +
	"\x0fQueryTimingInfo\x12*\n" +
	"\x11execution_time_ns\x18\x01 \x01(\x03R\x0fexecutionTimeNs\x12.\n" +
	"\x13compilation_time_ns\x18\x02 \x01(\x03R\x11compilationTimeNs*\xb8\x01\n" +
	"\x04Code\x12\x06\n" +
	"\x02OK\x10\x00\x12\f\n" +
	"\bINTERNAL\x10\x01\x12\x14\n" +
	"\x10INVALID_ARGUMENT\x10\x02\x12\r\n" +
	"\tNOT_FOUND\x10\x03\x12\x15\n" +
	"\x11PERMISSION_DENIED\x10\x04\x12\x11\n" +
	"\rUNIMPLEMENTED\x10\x05\x12\x17\n" +
	"\x13FAILED_PRECONDITION\x10\x06\x12\x16\n" +
	"\x12RESOURCE_EXHAUSTED\x10\a\x12\r\n" +
	"\tCANCELLED\x10\b\x12\v\n" +
	"\aUNKNOWN\x10\t*m\n" +
	"\bDataType\x12\x15\n" +
	"\x11DATA_TYPE_UNKNOWN\x10\x00\x12\v\n" +
	"\aBOOLEAN\x10\x01\x12\t\n" +
	"\x05INT64\x10\x02\x12\v\n" +
	"\aUINT128\x10\x03\x12\v\n" +
	"\aFLOAT64\x10\x04\x12\n" +
	"\n" +
	"\x06STRING\x10\x05\x12\f\n" +
	"\bTIME64NS\x10\x06*\xdb\x02\n" +
	"\fSemanticType\x12\v\n" +
	"\aST_NONE\x10\x00\x12\x0e\n" +
	"\n" +
	"ST_TIME_NS\x10\x01\x12\x13\n" +
	"\x0fST_SERVICE_NAME\x10\x02\x12\n" +
	"\n" +
	"\x06ST_POD\x10\x03\x12\x10\n" +
	"\fST_CONTAINER\x10\x04\x12\x10\n" +
	"\fST_NAMESPACE\x10\x05\x12\v\n" +
	"\aST_NODE\x10\x06\x12\v\n" +
	"\aST_UPID\x10\a\x12\x11\n" +
	"\rST_IP_ADDRESS\x10\b\x12\v\n" +
	"\aST_PORT\x10\t\x12\x17\n" +
	"\x13ST_HTTP_RESP_STATUS\x10\n" +
	"\x12\x18\n" +
	"\x14ST_HTTP_RESP_MESSAGE\x10\v\x12\x12\n" +
	"\x0eST_DURATION_NS\x10\f\x12\x18\n" +
	"\x14ST_THROUGHPUT_PER_NS\x10\r\x12\x1e\n" +
	"\x1aST_THROUGHPUT_BYTES_PER_NS\x10\x0e\x12\x10\n" +
	"\fST_QUANTILES\x10\x0f\x12\x0e\n" +
	"\n" +
	"ST_PERCENT\x10\x10\x12\f\n" +
	"\bST_BYTES\x10\x112\xcd\x01\n" +
	"\rVizierService\x12Z\n" +
	"\vHealthCheck\x12#.px.api.vizierpb.HealthCheckRequest\x1a$.px.api.vizierpb.HealthCheckResponse0\x01\x12`\n" +
	"\rExecuteScript\x12%.px.api.vizierpb.ExecuteScriptRequest\x1a&.px.api.vizierpb.ExecuteScriptResponse0\x01B8Z6github.com/wrongerror/observo-connector/proto/vizierpbb\x06proto3"

var (
	file_proto_vizierapi_real_proto_rawDescOnce sync.Once
	file_proto_vizierapi_real_proto_rawDescData []byte
)

func file_proto_vizierapi_real_proto_rawDescGZIP() []byte {
	file_proto_vizierapi_real_proto_rawDescOnce.Do(func() {
		file_proto_vizierapi_real_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vizierapi_real_proto_rawDesc), len(file_proto_vizierapi_real_proto_rawDesc)))
	})
	return file_proto_vizierapi_real_proto_rawDescData
}

var file_proto_vizierapi_real_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_vizierapi_real_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_proto_vizierapi_real_proto_goTypes = []any{
	(Code)(0),                     // 0: px.api.vizierpb.Code
	(DataType)(0),                 // 1: px.api.vizierpb.DataType
	(SemanticType)(0),             // 2: px.api.vizierpb.SemanticType
	(*Status)(nil),                // 3: px.api.vizierpb.Status
	(*HealthCheckRequest)(nil),    // 4: px.api.vizierpb.HealthCheckRequest
	(*HealthCheckResponse)(nil),   // 5: px.api.vizierpb.HealthCheckResponse
	(*ExecuteScriptRequest)(nil),  // 6: px.api.vizierpb.ExecuteScriptRequest
	(*QueryFunc)(nil),             // 7: px.api.vizierpb.QueryFunc
	(*QueryArg)(nil),              // 8: px.api.vizierpb.QueryArg
	(*ExecuteScriptResponse)(nil), // 9: px.api.vizierpb.ExecuteScriptResponse
	(*QueryMetadata)(nil),         // 10: px.api.vizierpb.QueryMetadata
	(*Relation)(nil),              // 11: px.api.vizierpb.Relation
	(*Column)(nil),                // 12: px.api.vizierpb.Column
	(*QueryData)(nil),             // 13: px.api.vizierpb.QueryData
	(*RowBatchData)(nil),          // 14: px.api.vizierpb.RowBatchData
	(*ColumnData)(nil),            // 15: px.api.vizierpb.ColumnData
	(*BooleanColumn)(nil),         // 16: px.api.vizierpb.BooleanColumn
	(*Int64Column)(nil),           // 17: px.api.vizierpb.Int64Column
	(*UInt128Column)(nil),         // 18: px.api.vizierpb.UInt128Column
	(*Float64Column)(nil),         // 19: px.api.vizierpb.Float64Column
	(*StringColumn)(nil),          // 20: px.api.vizierpb.StringColumn
	(*Time64NSColumn)(nil),        // 21: px.api.vizierpb.Time64NSColumn
	(*QueryExecutionStats)(nil),   // 22: px.api.vizierpb.QueryExecutionStats
	(*QueryTimingInfo)(nil),       // 23: px.api.vizierpb.QueryTimingInfo
	(*any1.Any)(nil),              // 24: google.protobuf.Any
}
var file_proto_vizierapi_real_proto_depIdxs = []int32{
	0,  // 0: px.api.vizierpb.Status.err_code:type_name -> px.api.vizierpb.Code
	24, // 1: px.api.vizierpb.Status.context:type_name -> google.protobuf.Any
	3,  // 2: px.api.vizierpb.HealthCheckResponse.status:type_name -> px.api.vizierpb.Status
	7,  // 3: px.api.vizierpb.ExecuteScriptRequest.exec_funcs:type_name -> px.api.vizierpb.QueryFunc
	8,  // 4: px.api.vizierpb.QueryFunc.arg_values:type_name -> px.api.vizierpb.QueryArg
	3,  // 5: px.api.vizierpb.ExecuteScriptResponse.status:type_name -> px.api.vizierpb.Status
	10, // 6: px.api.vizierpb.ExecuteScriptResponse.meta_data:type_name -> px.api.vizierpb.QueryMetadata
	13, // 7: px.api.vizierpb.ExecuteScriptResponse.data:type_name -> px.api.vizierpb.QueryData
	11, // 8: px.api.vizierpb.QueryMetadata.relation:type_name -> px.api.vizierpb.Relation
	12, // 9: px.api.vizierpb.Relation.columns:type_name -> px.api.vizierpb.Column
	1,  // 10: px.api.vizierpb.Column.column_type:type_name -> px.api.vizierpb.DataType
	2,  // 11: px.api.vizierpb.Column.column_semantic_type:type_name -> px.api.vizierpb.SemanticType
	14, // 12: px.api.vizierpb.QueryData.batch:type_name -> px.api.vizierpb.RowBatchData
	22, // 13: px.api.vizierpb.QueryData.execution_stats:type_name -> px.api.vizierpb.QueryExecutionStats
	15, // 14: px.api.vizierpb.RowBatchData.cols:type_name -> px.api.vizierpb.ColumnData
	16, // 15: px.api.vizierpb.ColumnData.boolean_data:type_name -> px.api.vizierpb.BooleanColumn
	17, // 16: px.api.vizierpb.ColumnData.int64_data:type_name -> px.api.vizierpb.Int64Column
	18, // 17: px.api.vizierpb.ColumnData.uint128_data:type_name -> px.api.vizierpb.UInt128Column
	19, // 18: px.api.vizierpb.ColumnData.float64_data:type_name -> px.api.vizierpb.Float64Column
	20, // 19: px.api.vizierpb.ColumnData.string_data:type_name -> px.api.vizierpb.StringColumn
	21, // 20: px.api.vizierpb.ColumnData.time64ns_data:type_name -> px.api.vizierpb.Time64NSColumn
	23, // 21: px.api.vizierpb.QueryExecutionStats.timing:type_name -> px.api.vizierpb.QueryTimingInfo
	4,  // 22: px.api.vizierpb.VizierService.HealthCheck:input_type -> px.api.vizierpb.HealthCheckRequest
	6,  // 23: px.api.vizierpb.VizierService.ExecuteScript:input_type -> px.api.vizierpb.ExecuteScriptRequest
	5,  // 24: px.api.vizierpb.VizierService.HealthCheck:output_type -> px.api.vizierpb.HealthCheckResponse
	9,  // 25: px.api.vizierpb.VizierService.ExecuteScript:output_type -> px.api.vizierpb.ExecuteScriptResponse
	24, // [24:26] is the sub-list for method output_type
	22, // [22:24] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_proto_vizierapi_real_proto_init() }
func file_proto_vizierapi_real_proto_init() {
	if File_proto_vizierapi_real_proto != nil {
		return
	}
	file_proto_vizierapi_real_proto_msgTypes[6].OneofWrappers = []any{
		(*ExecuteScriptResponse_MetaData)(nil),
		(*ExecuteScriptResponse_Data)(nil),
	}
	file_proto_vizierapi_real_proto_msgTypes[12].OneofWrappers = []any{
		(*ColumnData_BooleanData)(nil),
		(*ColumnData_Int64Data)(nil),
		(*ColumnData_Uint128Data)(nil),
		(*ColumnData_Float64Data)(nil),
		(*ColumnData_StringData)(nil),
		(*ColumnData_Time64NsData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vizierapi_real_proto_rawDesc), len(file_proto_vizierapi_real_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vizierapi_real_proto_goTypes,
		DependencyIndexes: file_proto_vizierapi_real_proto_depIdxs,
		EnumInfos:         file_proto_vizierapi_real_proto_enumTypes,
		MessageInfos:      file_proto_vizierapi_real_proto_msgTypes,
	}.Build()
	File_proto_vizierapi_real_proto = out.File
	file_proto_vizierapi_real_proto_goTypes = nil
	file_proto_vizierapi_real_proto_depIdxs = nil
}
