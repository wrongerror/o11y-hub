syntax = "proto3";

package px.api.vizierpb;

option go_package = "github.com/wrongerror/observo-connector/proto";

// Data types enum (from Pixie source)
enum DataType {
  DATA_TYPE_UNKNOWN = 0;
  BOOLEAN = 1;
  INT64 = 2;
  UINT128 = 3;
  FLOAT64 = 4;
  STRING = 5;
  TIME64NS = 6;
}

// Semantic types enum (from Pixie source)
enum SemanticType {
  ST_UNSPECIFIED = 0;
  ST_NONE = 1;
  ST_TIME_NS = 2;
  ST_AGENT_UID = 100;
}

// UInt128 representation
message UInt128 {
  uint64 low = 1;
  uint64 high = 2;
}

// Column data types
message BooleanColumn {
  repeated bool data = 1;
}

message Int64Column {
  repeated int64 data = 1;
}

message UInt128Column {
  repeated UInt128 data = 1;
}

message Float64Column {
  repeated double data = 1;
}

message Time64NSColumn {
  repeated int64 data = 1;
}

message StringColumn {
  repeated bytes data = 1;
}

// A single column of data
message Column {
  oneof col_data {
    BooleanColumn boolean_data = 1;
    Int64Column int64_data = 2;
    UInt128Column uint128_data = 3;
    Time64NSColumn time64ns_data = 4;
    Float64Column float64_data = 5;
    StringColumn string_data = 6;
  }
}

// Row batch data
message RowBatchData {
  repeated Column cols = 1;
  int64 num_rows = 2;
  bool eow = 3;
  bool eos = 4;
  string table_id = 5;
}

// Relation describes table structure
message Relation {
  message ColumnInfo {
    string column_name = 1;
    DataType column_type = 2;
    string column_desc = 3;
    SemanticType column_semantic_type = 4;
  }
  repeated ColumnInfo columns = 1;
}

// Error details
message CompilerError {
  uint64 line = 1;
  uint64 column = 2;
  string message = 3;
}

message ErrorDetails {
  oneof error {
    CompilerError compiler_error = 1;
  }
}

// Status message - matches Pixie exactly
message Status {
  int32 code = 1;
  string message = 2;
  repeated ErrorDetails error_details = 4;
  // reserved 3;
}

// Query execution stats
message QueryTimingInfo {
  int64 execution_time_ns = 1;
  int64 compilation_time_ns = 2;
}

message QueryExecutionStats {
  QueryTimingInfo timing = 1;
  int64 bytes_processed = 2;
  int64 records_processed = 3;
}

// Query metadata
message QueryMetadata {
  Relation relation = 1;
  string name = 2;
  string id = 3;
}

// Query data
message QueryData {
  RowBatchData batch = 1;
  QueryExecutionStats execution_stats = 2;
  bytes encrypted_batch = 3;
}

// Lifecycle states
enum LifeCycleState {
  UNKNOWN_STATE = 0;
  PENDING_STATE = 1;
  RUNNING_STATE = 2;
  FAILED_STATE = 3;
  TERMINATED_STATE = 4;
}

// Mutation info
message MutationInfo {
  message MutationState {
    string id = 1;
    LifeCycleState state = 2;
    string name = 3;
  }
  Status status = 1;
  repeated MutationState states = 2;
}

// Execute script request - matches Pixie field numbers exactly
message ExecuteScriptRequest {
  string query_str = 1;
  // cluster_id is field 3 in Pixie proto, not 2!
  string cluster_id = 3;
  
  message FuncToExecute {
    string func_name = 1;
    message ArgValue {
      string name = 1;
      string value = 2;
    }
    repeated ArgValue arg_values = 2;
    string output_table_prefix = 3;
  }
  repeated FuncToExecute exec_funcs = 4;
  bool mutation = 5;
}

// Execute script response - matches Pixie exactly
message ExecuteScriptResponse {
  Status status = 1;
  string query_id = 2;
  oneof result {
    QueryData data = 3;
    QueryMetadata meta_data = 4;
  }
  MutationInfo mutation_info = 5;
}

// Health check messages
message HealthCheckRequest {
  string cluster_id = 1;
}

message HealthCheckResponse {
  Status status = 1;
}

// VizierService
service VizierService {
  rpc HealthCheck(HealthCheckRequest) returns (stream HealthCheckResponse);
  rpc ExecuteScript(ExecuteScriptRequest) returns (stream ExecuteScriptResponse);
}
