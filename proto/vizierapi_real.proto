syntax = "proto3";

package px.api.vizierpb;

option go_package = "vizierpb";

import "google/protobuf/any.proto";

// Status codes enum
enum Code {
  OK = 0;
  INTERNAL = 1;
  INVALID_ARGUMENT = 2;
  NOT_FOUND = 3;
  PERMISSION_DENIED = 4;
  UNIMPLEMENTED = 5;
  FAILED_PRECONDITION = 6;
  RESOURCE_EXHAUSTED = 7;
  CANCELLED = 8;
  UNKNOWN = 9;
}

// Status message
message Status {
  Code err_code = 1;
  string msg = 2;
  google.protobuf.Any context = 3;
}

// Request for the HealthCheck call.
message HealthCheckRequest {
  // The UUID of the cluster encoded as a string with dashes.
  string cluster_id = 1;
}

// Response for the HealthCheck call.
message HealthCheckResponse {
  // The status of the cluster.
  Status status = 1;
}

// The API that manages all communication with a particular Vizier cluster.
service VizierService {
  // Start a stream to receive health updates from the Vizier service.
  rpc HealthCheck(HealthCheckRequest) returns (stream HealthCheckResponse);
}
