// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: proto/vizierapi.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DataType int32

const (
	DataType_DATA_TYPE_UNKNOWN DataType = 0
	DataType_BOOLEAN           DataType = 1
	DataType_INT64             DataType = 2
	DataType_UINT128           DataType = 3
	DataType_FLOAT64           DataType = 4
	DataType_STRING            DataType = 5
	DataType_TIME64NS          DataType = 6
)

// Enum value maps for DataType.
var (
	DataType_name = map[int32]string{
		0: "DATA_TYPE_UNKNOWN",
		1: "BOOLEAN",
		2: "INT64",
		3: "UINT128",
		4: "FLOAT64",
		5: "STRING",
		6: "TIME64NS",
	}
	DataType_value = map[string]int32{
		"DATA_TYPE_UNKNOWN": 0,
		"BOOLEAN":           1,
		"INT64":             2,
		"UINT128":           3,
		"FLOAT64":           4,
		"STRING":            5,
		"TIME64NS":          6,
	}
)

func (x DataType) Enum() *DataType {
	p := new(DataType)
	*p = x
	return p
}

func (x DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vizierapi_proto_enumTypes[0].Descriptor()
}

func (DataType) Type() protoreflect.EnumType {
	return &file_proto_vizierapi_proto_enumTypes[0]
}

func (x DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataType.Descriptor instead.
func (DataType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{0}
}

type SemanticType int32

const (
	SemanticType_ST_UNSPECIFIED    SemanticType = 0
	SemanticType_ST_NONE           SemanticType = 1
	SemanticType_ST_TIME_NS        SemanticType = 2
	SemanticType_ST_SERVICE_NAME   SemanticType = 300
	SemanticType_ST_POD_NAME       SemanticType = 400
	SemanticType_ST_NAMESPACE_NAME SemanticType = 700
	SemanticType_ST_BYTES          SemanticType = 800
	SemanticType_ST_PERCENT        SemanticType = 900
	SemanticType_ST_DURATION_NS    SemanticType = 901
)

// Enum value maps for SemanticType.
var (
	SemanticType_name = map[int32]string{
		0:   "ST_UNSPECIFIED",
		1:   "ST_NONE",
		2:   "ST_TIME_NS",
		300: "ST_SERVICE_NAME",
		400: "ST_POD_NAME",
		700: "ST_NAMESPACE_NAME",
		800: "ST_BYTES",
		900: "ST_PERCENT",
		901: "ST_DURATION_NS",
	}
	SemanticType_value = map[string]int32{
		"ST_UNSPECIFIED":    0,
		"ST_NONE":           1,
		"ST_TIME_NS":        2,
		"ST_SERVICE_NAME":   300,
		"ST_POD_NAME":       400,
		"ST_NAMESPACE_NAME": 700,
		"ST_BYTES":          800,
		"ST_PERCENT":        900,
		"ST_DURATION_NS":    901,
	}
)

func (x SemanticType) Enum() *SemanticType {
	p := new(SemanticType)
	*p = x
	return p
}

func (x SemanticType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SemanticType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vizierapi_proto_enumTypes[1].Descriptor()
}

func (SemanticType) Type() protoreflect.EnumType {
	return &file_proto_vizierapi_proto_enumTypes[1]
}

func (x SemanticType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SemanticType.Descriptor instead.
func (SemanticType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{1}
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_proto_vizierapi_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Status) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Column struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ColumnName         string                 `protobuf:"bytes,1,opt,name=column_name,json=columnName,proto3" json:"column_name,omitempty"`
	ColumnType         DataType               `protobuf:"varint,2,opt,name=column_type,json=columnType,proto3,enum=demo.vizierpb.DataType" json:"column_type,omitempty"`
	ColumnSemanticType SemanticType           `protobuf:"varint,3,opt,name=column_semantic_type,json=columnSemanticType,proto3,enum=demo.vizierpb.SemanticType" json:"column_semantic_type,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Column) Reset() {
	*x = Column{}
	mi := &file_proto_vizierapi_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{1}
}

func (x *Column) GetColumnName() string {
	if x != nil {
		return x.ColumnName
	}
	return ""
}

func (x *Column) GetColumnType() DataType {
	if x != nil {
		return x.ColumnType
	}
	return DataType_DATA_TYPE_UNKNOWN
}

func (x *Column) GetColumnSemanticType() SemanticType {
	if x != nil {
		return x.ColumnSemanticType
	}
	return SemanticType_ST_UNSPECIFIED
}

type RowBatchData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cols          []*Column              `protobuf:"bytes,1,rep,name=cols,proto3" json:"cols,omitempty"`
	NumRows       int64                  `protobuf:"varint,2,opt,name=num_rows,json=numRows,proto3" json:"num_rows,omitempty"`
	StringData    []string               `protobuf:"bytes,3,rep,name=string_data,json=stringData,proto3" json:"string_data,omitempty"`
	Int64Data     []int64                `protobuf:"varint,4,rep,packed,name=int64_data,json=int64Data,proto3" json:"int64_data,omitempty"`
	Float64Data   []float64              `protobuf:"fixed64,5,rep,packed,name=float64_data,json=float64Data,proto3" json:"float64_data,omitempty"`
	BoolData      []bool                 `protobuf:"varint,6,rep,packed,name=bool_data,json=boolData,proto3" json:"bool_data,omitempty"`
	Uint128Data   []uint64               `protobuf:"varint,7,rep,packed,name=uint128_data,json=uint128Data,proto3" json:"uint128_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RowBatchData) Reset() {
	*x = RowBatchData{}
	mi := &file_proto_vizierapi_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RowBatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RowBatchData) ProtoMessage() {}

func (x *RowBatchData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RowBatchData.ProtoReflect.Descriptor instead.
func (*RowBatchData) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{2}
}

func (x *RowBatchData) GetCols() []*Column {
	if x != nil {
		return x.Cols
	}
	return nil
}

func (x *RowBatchData) GetNumRows() int64 {
	if x != nil {
		return x.NumRows
	}
	return 0
}

func (x *RowBatchData) GetStringData() []string {
	if x != nil {
		return x.StringData
	}
	return nil
}

func (x *RowBatchData) GetInt64Data() []int64 {
	if x != nil {
		return x.Int64Data
	}
	return nil
}

func (x *RowBatchData) GetFloat64Data() []float64 {
	if x != nil {
		return x.Float64Data
	}
	return nil
}

func (x *RowBatchData) GetBoolData() []bool {
	if x != nil {
		return x.BoolData
	}
	return nil
}

func (x *RowBatchData) GetUint128Data() []uint64 {
	if x != nil {
		return x.Uint128Data
	}
	return nil
}

type QueryMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Columns       []*Column              `protobuf:"bytes,3,rep,name=columns,proto3" json:"columns,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *QueryMetadata) Reset() {
	*x = QueryMetadata{}
	mi := &file_proto_vizierapi_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryMetadata) ProtoMessage() {}

func (x *QueryMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryMetadata.ProtoReflect.Descriptor instead.
func (*QueryMetadata) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{3}
}

func (x *QueryMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QueryMetadata) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *QueryMetadata) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

type QueryExecutionStats struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Timing           int64                  `protobuf:"varint,1,opt,name=timing,proto3" json:"timing,omitempty"`
	BytesProcessed   int64                  `protobuf:"varint,2,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
	RecordsProcessed int64                  `protobuf:"varint,3,opt,name=records_processed,json=recordsProcessed,proto3" json:"records_processed,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *QueryExecutionStats) Reset() {
	*x = QueryExecutionStats{}
	mi := &file_proto_vizierapi_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryExecutionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryExecutionStats) ProtoMessage() {}

func (x *QueryExecutionStats) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryExecutionStats.ProtoReflect.Descriptor instead.
func (*QueryExecutionStats) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{4}
}

func (x *QueryExecutionStats) GetTiming() int64 {
	if x != nil {
		return x.Timing
	}
	return 0
}

func (x *QueryExecutionStats) GetBytesProcessed() int64 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

func (x *QueryExecutionStats) GetRecordsProcessed() int64 {
	if x != nil {
		return x.RecordsProcessed
	}
	return 0
}

type QueryData struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Batch          *RowBatchData          `protobuf:"bytes,1,opt,name=batch,proto3" json:"batch,omitempty"`
	ExecutionStats *QueryExecutionStats   `protobuf:"bytes,2,opt,name=execution_stats,json=executionStats,proto3" json:"execution_stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *QueryData) Reset() {
	*x = QueryData{}
	mi := &file_proto_vizierapi_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QueryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryData) ProtoMessage() {}

func (x *QueryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryData.ProtoReflect.Descriptor instead.
func (*QueryData) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{5}
}

func (x *QueryData) GetBatch() *RowBatchData {
	if x != nil {
		return x.Batch
	}
	return nil
}

func (x *QueryData) GetExecutionStats() *QueryExecutionStats {
	if x != nil {
		return x.ExecutionStats
	}
	return nil
}

type ExecuteScriptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	QueryStr      string                 `protobuf:"bytes,1,opt,name=query_str,json=queryStr,proto3" json:"query_str,omitempty"`
	ClusterId     string                 `protobuf:"bytes,3,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptRequest) Reset() {
	*x = ExecuteScriptRequest{}
	mi := &file_proto_vizierapi_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptRequest) ProtoMessage() {}

func (x *ExecuteScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptRequest.ProtoReflect.Descriptor instead.
func (*ExecuteScriptRequest) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{6}
}

func (x *ExecuteScriptRequest) GetQueryStr() string {
	if x != nil {
		return x.QueryStr
	}
	return ""
}

func (x *ExecuteScriptRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type ExecuteScriptResponse struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Status  *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	QueryId string                 `protobuf:"bytes,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	// Types that are valid to be assigned to Result:
	//
	//	*ExecuteScriptResponse_Data
	//	*ExecuteScriptResponse_MetaData
	Result        isExecuteScriptResponse_Result `protobuf_oneof:"result"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteScriptResponse) Reset() {
	*x = ExecuteScriptResponse{}
	mi := &file_proto_vizierapi_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteScriptResponse) ProtoMessage() {}

func (x *ExecuteScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteScriptResponse.ProtoReflect.Descriptor instead.
func (*ExecuteScriptResponse) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{7}
}

func (x *ExecuteScriptResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExecuteScriptResponse) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *ExecuteScriptResponse) GetResult() isExecuteScriptResponse_Result {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ExecuteScriptResponse) GetData() *QueryData {
	if x != nil {
		if x, ok := x.Result.(*ExecuteScriptResponse_Data); ok {
			return x.Data
		}
	}
	return nil
}

func (x *ExecuteScriptResponse) GetMetaData() *QueryMetadata {
	if x != nil {
		if x, ok := x.Result.(*ExecuteScriptResponse_MetaData); ok {
			return x.MetaData
		}
	}
	return nil
}

type isExecuteScriptResponse_Result interface {
	isExecuteScriptResponse_Result()
}

type ExecuteScriptResponse_Data struct {
	Data *QueryData `protobuf:"bytes,3,opt,name=data,proto3,oneof"`
}

type ExecuteScriptResponse_MetaData struct {
	MetaData *QueryMetadata `protobuf:"bytes,4,opt,name=meta_data,json=metaData,proto3,oneof"`
}

func (*ExecuteScriptResponse_Data) isExecuteScriptResponse_Result() {}

func (*ExecuteScriptResponse_MetaData) isExecuteScriptResponse_Result() {}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_vizierapi_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{8}
}

func (x *HealthCheckRequest) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *Status                `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_vizierapi_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vizierapi_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_vizierapi_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckResponse) GetStatus() *Status {
	if x != nil {
		return x.Status
	}
	return nil
}

var File_proto_vizierapi_proto protoreflect.FileDescriptor

const file_proto_vizierapi_proto_rawDesc = "" +
	"\n" +
	"\x15proto/vizierapi.proto\x12\rdemo.vizierpb\"6\n" +
	"\x06Status\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xb2\x01\n" +
	"\x06Column\x12\x1f\n" +
	"\vcolumn_name\x18\x01 \x01(\tR\n" +
	"columnName\x128\n" +
	"\vcolumn_type\x18\x02 \x01(\x0e2\x17.demo.vizierpb.DataTypeR\n" +
	"columnType\x12M\n" +
	"\x14column_semantic_type\x18\x03 \x01(\x0e2\x1b.demo.vizierpb.SemanticTypeR\x12columnSemanticType\"\xf7\x01\n" +
	"\fRowBatchData\x12)\n" +
	"\x04cols\x18\x01 \x03(\v2\x15.demo.vizierpb.ColumnR\x04cols\x12\x19\n" +
	"\bnum_rows\x18\x02 \x01(\x03R\anumRows\x12\x1f\n" +
	"\vstring_data\x18\x03 \x03(\tR\n" +
	"stringData\x12\x1d\n" +
	"\n" +
	"int64_data\x18\x04 \x03(\x03R\tint64Data\x12!\n" +
	"\ffloat64_data\x18\x05 \x03(\x01R\vfloat64Data\x12\x1b\n" +
	"\tbool_data\x18\x06 \x03(\bR\bboolData\x12!\n" +
	"\fuint128_data\x18\a \x03(\x04R\vuint128Data\"d\n" +
	"\rQueryMetadata\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12/\n" +
	"\acolumns\x18\x03 \x03(\v2\x15.demo.vizierpb.ColumnR\acolumns\"\x83\x01\n" +
	"\x13QueryExecutionStats\x12\x16\n" +
	"\x06timing\x18\x01 \x01(\x03R\x06timing\x12'\n" +
	"\x0fbytes_processed\x18\x02 \x01(\x03R\x0ebytesProcessed\x12+\n" +
	"\x11records_processed\x18\x03 \x01(\x03R\x10recordsProcessed\"\x8b\x01\n" +
	"\tQueryData\x121\n" +
	"\x05batch\x18\x01 \x01(\v2\x1b.demo.vizierpb.RowBatchDataR\x05batch\x12K\n" +
	"\x0fexecution_stats\x18\x02 \x01(\v2\".demo.vizierpb.QueryExecutionStatsR\x0eexecutionStats\"R\n" +
	"\x14ExecuteScriptRequest\x12\x1b\n" +
	"\tquery_str\x18\x01 \x01(\tR\bqueryStr\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x03 \x01(\tR\tclusterId\"\xd8\x01\n" +
	"\x15ExecuteScriptResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.demo.vizierpb.StatusR\x06status\x12\x19\n" +
	"\bquery_id\x18\x02 \x01(\tR\aqueryId\x12.\n" +
	"\x04data\x18\x03 \x01(\v2\x18.demo.vizierpb.QueryDataH\x00R\x04data\x12;\n" +
	"\tmeta_data\x18\x04 \x01(\v2\x1c.demo.vizierpb.QueryMetadataH\x00R\bmetaDataB\b\n" +
	"\x06result\"3\n" +
	"\x12HealthCheckRequest\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\"D\n" +
	"\x13HealthCheckResponse\x12-\n" +
	"\x06status\x18\x01 \x01(\v2\x15.demo.vizierpb.StatusR\x06status*m\n" +
	"\bDataType\x12\x15\n" +
	"\x11DATA_TYPE_UNKNOWN\x10\x00\x12\v\n" +
	"\aBOOLEAN\x10\x01\x12\t\n" +
	"\x05INT64\x10\x02\x12\v\n" +
	"\aUINT128\x10\x03\x12\v\n" +
	"\aFLOAT64\x10\x04\x12\n" +
	"\n" +
	"\x06STRING\x10\x05\x12\f\n" +
	"\bTIME64NS\x10\x06*\xb4\x01\n" +
	"\fSemanticType\x12\x12\n" +
	"\x0eST_UNSPECIFIED\x10\x00\x12\v\n" +
	"\aST_NONE\x10\x01\x12\x0e\n" +
	"\n" +
	"ST_TIME_NS\x10\x02\x12\x14\n" +
	"\x0fST_SERVICE_NAME\x10\xac\x02\x12\x10\n" +
	"\vST_POD_NAME\x10\x90\x03\x12\x16\n" +
	"\x11ST_NAMESPACE_NAME\x10\xbc\x05\x12\r\n" +
	"\bST_BYTES\x10\xa0\x06\x12\x0f\n" +
	"\n" +
	"ST_PERCENT\x10\x84\a\x12\x13\n" +
	"\x0eST_DURATION_NS\x10\x85\a2\xc5\x01\n" +
	"\rVizierService\x12\\\n" +
	"\rExecuteScript\x12#.demo.vizierpb.ExecuteScriptRequest\x1a$.demo.vizierpb.ExecuteScriptResponse0\x01\x12V\n" +
	"\vHealthCheck\x12!.demo.vizierpb.HealthCheckRequest\x1a\".demo.vizierpb.HealthCheckResponse0\x01B/Z-github.com/wrongerror/observo-connector/protob\x06proto3"

var (
	file_proto_vizierapi_proto_rawDescOnce sync.Once
	file_proto_vizierapi_proto_rawDescData []byte
)

func file_proto_vizierapi_proto_rawDescGZIP() []byte {
	file_proto_vizierapi_proto_rawDescOnce.Do(func() {
		file_proto_vizierapi_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vizierapi_proto_rawDesc), len(file_proto_vizierapi_proto_rawDesc)))
	})
	return file_proto_vizierapi_proto_rawDescData
}

var file_proto_vizierapi_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_vizierapi_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_proto_vizierapi_proto_goTypes = []any{
	(DataType)(0),                 // 0: demo.vizierpb.DataType
	(SemanticType)(0),             // 1: demo.vizierpb.SemanticType
	(*Status)(nil),                // 2: demo.vizierpb.Status
	(*Column)(nil),                // 3: demo.vizierpb.Column
	(*RowBatchData)(nil),          // 4: demo.vizierpb.RowBatchData
	(*QueryMetadata)(nil),         // 5: demo.vizierpb.QueryMetadata
	(*QueryExecutionStats)(nil),   // 6: demo.vizierpb.QueryExecutionStats
	(*QueryData)(nil),             // 7: demo.vizierpb.QueryData
	(*ExecuteScriptRequest)(nil),  // 8: demo.vizierpb.ExecuteScriptRequest
	(*ExecuteScriptResponse)(nil), // 9: demo.vizierpb.ExecuteScriptResponse
	(*HealthCheckRequest)(nil),    // 10: demo.vizierpb.HealthCheckRequest
	(*HealthCheckResponse)(nil),   // 11: demo.vizierpb.HealthCheckResponse
}
var file_proto_vizierapi_proto_depIdxs = []int32{
	0,  // 0: demo.vizierpb.Column.column_type:type_name -> demo.vizierpb.DataType
	1,  // 1: demo.vizierpb.Column.column_semantic_type:type_name -> demo.vizierpb.SemanticType
	3,  // 2: demo.vizierpb.RowBatchData.cols:type_name -> demo.vizierpb.Column
	3,  // 3: demo.vizierpb.QueryMetadata.columns:type_name -> demo.vizierpb.Column
	4,  // 4: demo.vizierpb.QueryData.batch:type_name -> demo.vizierpb.RowBatchData
	6,  // 5: demo.vizierpb.QueryData.execution_stats:type_name -> demo.vizierpb.QueryExecutionStats
	2,  // 6: demo.vizierpb.ExecuteScriptResponse.status:type_name -> demo.vizierpb.Status
	7,  // 7: demo.vizierpb.ExecuteScriptResponse.data:type_name -> demo.vizierpb.QueryData
	5,  // 8: demo.vizierpb.ExecuteScriptResponse.meta_data:type_name -> demo.vizierpb.QueryMetadata
	2,  // 9: demo.vizierpb.HealthCheckResponse.status:type_name -> demo.vizierpb.Status
	8,  // 10: demo.vizierpb.VizierService.ExecuteScript:input_type -> demo.vizierpb.ExecuteScriptRequest
	10, // 11: demo.vizierpb.VizierService.HealthCheck:input_type -> demo.vizierpb.HealthCheckRequest
	9,  // 12: demo.vizierpb.VizierService.ExecuteScript:output_type -> demo.vizierpb.ExecuteScriptResponse
	11, // 13: demo.vizierpb.VizierService.HealthCheck:output_type -> demo.vizierpb.HealthCheckResponse
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_vizierapi_proto_init() }
func file_proto_vizierapi_proto_init() {
	if File_proto_vizierapi_proto != nil {
		return
	}
	file_proto_vizierapi_proto_msgTypes[7].OneofWrappers = []any{
		(*ExecuteScriptResponse_Data)(nil),
		(*ExecuteScriptResponse_MetaData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vizierapi_proto_rawDesc), len(file_proto_vizierapi_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vizierapi_proto_goTypes,
		DependencyIndexes: file_proto_vizierapi_proto_depIdxs,
		EnumInfos:         file_proto_vizierapi_proto_enumTypes,
		MessageInfos:      file_proto_vizierapi_proto_msgTypes,
	}.Build()
	File_proto_vizierapi_proto = out.File
	file_proto_vizierapi_proto_goTypes = nil
	file_proto_vizierapi_proto_depIdxs = nil
}
